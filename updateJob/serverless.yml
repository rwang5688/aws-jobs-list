service: updateJob
frameworkVersion: ">=1.30.0"
plugins:
  - serverless-dotenv-plugin
  - serverless-python-requirements
custom:
  accountid: ${env:AWS_ACCOUNT_ID}
  region: ${env:AWS_DEFAULT_REGION, 'us-west-2'}
  logDataBucket: ${env:JOBS_LIST_LOG_DATA_BUCKET}
  updateJobQueue: ${env:JOBS_LIST_UPDATE_JOB_QUEUE}
  updateJobLogStreamQueue: ${env:JOBS_LIST_UPDATE_JOB_LOG_STREAM_QUEUE}
  jobsTable: ${env:JOBS_LIST_JOBS_TABLE}
  dotenv:
    path: ../.env
  pythonRequirements:
    dockerizePip: non-linux

provider:
  name: aws
  stage: dev
  runtime: python3.8
  region: ${env:AWS_DEFAULT_REGION, 'us-west-2'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
      Resource: "arn:aws:s3:::${self:custom.logDataBucket}/*"
    - Effect: Allow
      Action:
        - sqs:ListQueues
      Resource: "arn:aws:sqs:${self:provider.region}:*:*"
    - Effect: Allow
      Action:
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:GetQueueUrl
      Resource: "arn:aws:sqs:*:*:${self:custom.updateJobQueue}"
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:DeleteMessage
        - sqs:GetQueueUrl
      Resource: "arn:aws:sqs:*:*:${self:custom.updateJobLogStreamQueue}"
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:custom.region}:${self:custom.accountid}:*"

functions:
  createJob:
    handler: createJob.createJob
    role: arn:aws:iam::${self:custom.accountid}:role/jobs-list
    environment:
      ACCOUNT_ID: ${env:AWS_ACCOUNT_ID}
      REGION: ${env:AWS_DEFAULT_REGION, 'us-west-2'}
      LOG_DATA_BUCKET: ${env:JOBS_LIST_LOG_DATA_BUCKET}
      UPDATE_JOB_QUEUE: ${env:JOBS_LIST_UPDATE_JOB_QUEUE}
      UPDATE_JOB_LOG-STREAM_QUEUE: ${env:JOBS_LIST_UPDATE_JOB_LOG_STREAM_QUEUE}
      JOBS_TABLE: ${env:JOBS_LIST_JOBS_TABLE}
      STAGE: ${env:self:provider.stage}
    events:
      - sqs:
          arn: "arn:aws:sqs:${self:provider.region}:${self:custom.accountid}:${self:custom.updateJobQueue}"


service: uploadTaskIssues
frameworkVersion: ">=1.30.0"
plugins:
  - serverless-dotenv-plugin
  - serverless-python-requirements
custom:
  accountid: ${env:AWS_ACCOUNT_ID}
  cloud: ${env:TARGET_CLOUD}
  region: ${env:TARGET_REGION}
  logDataBucket: ${env:TASK_EXEC_LOG_DATA_BUCKET}
  resultDataBucket: ${env:TASK_EXEC_RESULT_DATA_BUCKET}
  uploadTaskIssuesQueue: ${env:TASK_EXEC_UPLOAD_TASK_ISSUES_QUEUE}
  generateTaskSummaryQueue: ${env:TASK_EXEC_GENERATE_TASK_SUMMARY_QUEUE}
  issueTable: ${env:TASK_EXEC_ISSUE_TABLE}
  dotenv:
    path: ../.env
  pythonRequirements:
    dockerizePip: non-linux

provider:
  name: aws
  stage: dev
  runtime: python3.8
  region: ${env:TARGET_REGION}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
      Resource: "arn:${self:custom.cloud}:s3:::${self:custom.logDataBucket}/*"
    - Effect: Allow
      Action:
        - s3:GetObject
      Resource: "arn:${self:custom.cloud}:s3:::${self:custom.resultDataBucket}/*"
    - Effect: Allow
      Action:
        - sqs:ListQueues
      Resource: "arn:${self:custom.cloud}:sqs:${self:provider.region}:*:*"
    - Effect: Allow
      Action:
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:GetQueueUrl
      Resource: "arn:${self:custom.cloud}:sqs:*:*:${self:custom.uploadTaskIssuesQueue}"
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:DeleteMessage
        - sqs:GetQueueUrl
      Resource: "arn:${self:custom.cloud}:sqs:*:*:${self:custom.generateTaskSummaryQueue}"
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:${self:custom.cloud}:dynamodb:${self:custom.region}:${self:custom.accountid}:*"

functions:
  uploadTaskIssues:
    handler: uploadTaskIssues.uploadTaskIssues
    role: arn:${self:custom.cloud}:iam::${self:custom.accountid}:role/task-execution-pipeline
    environment:
      ACCOUNT_ID: ${env:AWS_ACCOUNT_ID}
      REGION: ${env:TARGET_REGION}
      LOG_DATA_BUCKET: ${env:TASK_EXEC_LOG_DATA_BUCKET}
      RESULT_DATA_BUCKET: ${env:TASK_EXEC_RESULT_DATA_BUCKET}
      UPLOAD_TASK_ISSUES_QUEUE: ${env:TASK_EXEC_UPLOAD_TASK_ISSUES_QUEUE}
      GENERATE_TASK_SUMMARY_QUEUE: ${env:TASK_EXEC_GENERATE_TASK_SUMMARY_QUEUE}
      ISSUE_TABLE: ${env:TASK_EXEC_ISSUE_TABLE}
      STAGE: ${self:provider.stage}
    events:
      - sqs:
          arn: "arn:${self:custom.cloud}:sqs:${self:provider.region}:${self:custom.accountid}:${self:custom.uploadTaskIssuesQueue}"

